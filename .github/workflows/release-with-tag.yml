name: Release GA

on:
  push:
    branches:
      - main
      - develop

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        architecture: x64

    - name: Build with Maven
      run: mvn package

    - name: 現在の日付でリリース名を作成
      run: |
        BRANCH_NAME=${{ github.ref_name }}
        CURRENT_DATE=$(TZ=Asia/Tokyo date +'%Y-%m-%d %H:%M')
        echo "TAG_NAME=${BRANCH_NAME}/latest" >> ${GITHUB_ENV}
        echo "RELEASE_NAME=Latest Release (${BRANCH_NAME}) - ${CURRENT_DATE}" >> ${GITHUB_ENV}

    - name: 既存のlatestタグをprevにリネーム
      run: |
        BRANCH_NAME=${{ github.ref_name }}
        PREV_TAG_NAME="${BRANCH_NAME}/prev"
        
        # 既存のlatest tagが存在するかチェック
        if git ls-remote --tags origin | grep -q "refs/tags/${{ env.TAG_NAME }}"; then
          # 既存のprev tagとリリースを削除
          gh release delete ${PREV_TAG_NAME} --yes || true
          git push origin :refs/tags/${PREV_TAG_NAME} || true
          
          # 既存のlatest tagをprevにリネーム
          git fetch origin ${{ env.TAG_NAME }}:${{ env.TAG_NAME }} || true
          git tag ${PREV_TAG_NAME} ${{ env.TAG_NAME }}
          git push origin ${PREV_TAG_NAME}
          
          # 古いlatest tagを削除
          # gh release delete ${{ env.TAG_NAME }} --yes || true
          git push origin :refs/tags/${{ env.TAG_NAME }} || true
        fi
        
        echo "PREV_TAG_NAME=${PREV_TAG_NAME}" >> ${GITHUB_ENV}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 新しいlatestタグを作成
      run: |
        # ローカルタグが残っている場合は削除
        git tag -d ${{ env.TAG_NAME }} || true
        git tag ${{ env.TAG_NAME }}
        git push origin ${{ env.TAG_NAME }}

    - name: リリースの更新
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: ${{ env.RELEASE_NAME }}
        files: target/*.jar
        generate_release_notes: true
